# -*- yaml -*-
version: 2.1
orbs:
  go-module: timakin/go-module@0.3.0
  sixrs-gke: sixriversystems/sixrs-gke@0.1.1
jobs:
  build-amd64:
    docker:
      - image: docker:18.09.9-git
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          command: docker build -t amd64 -f amd64.dockerfile .
          no_output_timeout: 3600 
      - run: docker run --name temp-container amd64 /bin/true
      - run: docker cp temp-container:/@6river/ ./
      - run: docker rm temp-container
      - run: ls -la
      - persist_to_workspace:
          root: ./
          paths:
            - '@6river'
  build-arm64:
    docker:
      - image: docker:18.09.9-git
    steps:
      - checkout
      - setup_remote_docker
      - run: 
          command: docker build -t arm64 -f arm64.dockerfile .
          no_output_timeout: 3600 
      - run: docker run --name temp-container arm64 /bin/true
      - run: docker cp temp-container:/@6river/ .
      - run: docker cp temp-container:/target_path.txt .
      - run: docker rm temp-container
      - run: ls -la
      - persist_to_workspace:
          root: ./
          paths:
            - target_path.txt
            - binary_path.txt
            - '@6river'
  upload:
    docker:
      - image: google/cloud-sdk:alpine
    steps:
      - attach_workspace:
          at: .
      - run: ls -la
      - run: 
          name: Activate gcloud
          command: |
            echo "${CLIENT_SECRET}" | base64 -d > /tmp/client-secret.json
            gcloud auth activate-service-account --key-file /tmp/client-secret.json
      - run: 
          name: Upload to gcloud 
          command: |
            BINARY_PATH=$(dirname $(cat binary_path.txt))
            TARGET_PATH=$(dirname $(cat target_path.txt))
            ls -la ${BINARY_PATH}
            cp -r ${BINARY_PATH}/*.tar.gz .
            gsutil cp -r *.tar.gz gs://public-nodejs-binary/${TARGET_PATH}/
            gsutil acl ch -r -u AllUsers:R gs://public-nodejs-binary/${TARGET_PATH}

workflows:
  build_and_release:
    jobs:
      - build-arm64:
          context: 6rs-circle
      - build-amd64:
          context: 6rs-circle
      - upload:
          context: 6rs-circle
          requires:
            - build-amd64
            - build-arm64


      
